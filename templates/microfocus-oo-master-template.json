{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This master template creates a VPC infrastructure for a multi-AZ, multi-tier deployment of OO on AWS. It deploys a VPC with bastion hosts, an OO Central cluster, a OO Web Designer instance and an AWS Relational Database instance. **WARNING** This template creates EC2 instances and related resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1pg0022k8)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "License agreement"
                    },
                    "Parameters": [
                        "LicenseAgreement"
                    ]
                },
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "PrivateSubnet1CIDR",
                        "PrivateSubnet2CIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "VPCCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Linux Bastion Configuration"
                    },
                    "Parameters": [
                        "BastionInstanceType",
                        "LinuxBastionKeyPairName",
                        "BastionAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Load Balancer Configuration"
                    },
                    "Parameters": [
                        "ELBScheme",
                        "ELBAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Database Instance Configuration"
                    },
                    "Parameters": [
                        "DBMultiAZ",
                        "DBInstanceType",
                        "DBStorageInGB",
                        "DBMasterUsername",
                        "DBMasterPassword",
                        "DBMasterPasswordConfirm",
                        "OOCentralDBName",
                        "OODesignerDBName",
                        "DBBackupRetentionPeriod",
                        "DBPreferredBackupWindow",
                        "DBPreferredMaintenanceWindow"
                    ]
                },
                {
                    "Label": {
                        "default": "OO EC2 Instances Configuration"
                    },
                    "Parameters": [
                        "OOKeyPairName"
                    ]
                },
                {
                    "Label": {
                        "default": "OO Central Cluster Configuration"
                    },
                    "Parameters": [
                        "OOCentralInstanceType",
                        "OOCentralT2T3Burst",
                        "CWCentralMonitoring",
                        "OOCentralNodesSize",
                        "NotificationTrigger",
                        "OperatorEmail",
                        "OOCentralPass",
                        "OOCentralPassConfirm",
                        "OOCentralOOPass",
                        "OOCentralOOPassConfirm",
                        "OOCentralRootPass",
                        "OOCentralRootPassConfirm",
                        "QSS3BucketNameForCluster",
                        "QSS3KeyPrefixForCluster"
                    ]
                },
                {
                    "Label": {
                        "default": "OO Workflow Designer Configuration"
                    },
                    "Parameters": [
                        "OODesignerTrigger",
                        "OODesignerInstanceType",
                        "CWDesignerMonitoring",
                        "OODesignerPass",
                        "OODesignerPassConfirm",
                        "OODesignerOOPass",
                        "OODesignerOOPassConfirm",
                        "OODesignerRootPass",
                        "OODesignerRootPassConfirm"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "BastionInstanceType": {
                    "default": "Bastion Instance Type"
                },
                "OOCentralDBName": {
                    "default": "OO Central's DB name"
                },
                "OOCentralInstanceType": {
                    "default": "Central Instance Type"
                },
                "OOCentralNodesSize": {
                    "default": "Central Nodes in cluster"
                },
                "OOCentralT2T3Burst": {
                    "default": "T2/T3 Burst Mode"
                },
                "CWCentralMonitoring": {
                    "default": "Cloud Watch Monitoring"
                },
                "CWDesignerMonitoring": {
                    "default": "Cloud Watch Monitoring"
                },
                "DBBackupRetentionPeriod": {
                    "default": "DB Backup Retention"
                },
                "DBInstanceType": {
                    "default": "Database Instance Type"
                },
                "DBMasterPassword": {
                    "default": "Database Password"
                },
                "DBMasterPasswordConfirm": {
                    "default": "Confirm Password"
                },
                "DBMasterUsername": {
                    "default": "Database Master User"
                },
                "DBMultiAZ": {
                    "default": "Deploy in Multi-AZ"
                },
                "DBPreferredBackupWindow": {
                    "default": "DB Backup Window"
                },
                "DBPreferredMaintenanceWindow": {
                    "default": "DB Maintenance Window"
                },
                "DBStorageInGB": {
                    "default": "Database Storage"
                },
                "OODesignerDBName": {
                    "default": "OO Designer's DB name"
                },
                "OODesignerInstanceType": {
                    "default": "Designer Instance Type"
                },
                "ELBAccessCIDR": {
                    "default": "Load Balancer Access CIDR"
                },
                "ELBScheme": {
                    "default": "Load Balancer Scheme"
                },
                "LicenseAgreement": {
                    "default": "License agreement"
                },
                "LinuxBastionKeyPairName": {
                    "default": "Key Pair Name"
                },
                "NotificationTrigger": {
                    "default": "E-mail Notifications"
                },
                "OOCentralOOPass": {
                    "default": "Linux 'oo' User Password"
                },
                "OOCentralOOPassConfirm": {
                    "default": "Confirm Password"
                },
                "OOCentralPass": {
                    "default": "Central Admin Password"
                },
                "OOCentralPassConfirm": {
                    "default": "Confirm Password"
                },
                "OOCentralRootPass": {
                    "default": "Linux 'root' password"
                },
                "OOCentralRootPassConfirm": {
                    "default": "Confirm Password"
                },
                "OODesignerOOPass": {
                    "default": "Linux 'oo' User Password"
                },
                "OODesignerOOPassConfirm": {
                    "default": "Confirm Password"
                },
                "OODesignerPass": {
                    "default": "Designer Admin Password"
                },
                "OODesignerPassConfirm": {
                    "default": "Confirm Password"
                },
                "OODesignerRootPass": {
                    "default": "Linux 'root' Password"
                },
                "OODesignerRootPassConfirm": {
                    "default": "Confirm Password"
                },
                "OODesignerTrigger": {
                    "default": "Deploy Workflow Designer"
                },
                "OOKeyPairName": {
                    "default": "OO Key Pair Name"
                },
                "OperatorEmail": {
                    "default": "Operator Email"
                },
                "PrivateSubnet1CIDR": {
                    "default": "Private Subnet 1 CIDR"
                },
                "PrivateSubnet2CIDR": {
                    "default": "Private Subnet 2 CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public Subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public Subnet 2 CIDR"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3BucketNameForCluster": {
                    "default": "S3 Bucket Name for OO Cluster"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "QSS3KeyPrefixForCluster": {
                    "default": "S3 Key Prefix for OO Cluster"
                },
                "BastionAccessCIDR": {
                    "default": "Allowed Bastion External Access CIDR"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                }
            }
        }
    },
    "Parameters": {
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Only two Availability Zones are used for this deployment, and the logical order of your selections is preserved.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "BastionInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "t2.micro",
            "Description": "Amazon EC2 instance type for the bastion instances",
            "Type": "String"
        },
        "OOCentralDBName": {
            "AllowedPattern": "^[a-zA-Z0-9]{2,32}$",
            "ConstraintDescription": "The Central database name must be alphanumeric, can contain uppercases, lowercases and must be between 2 and 32 chars long",
            "Default": "oocentral",
            "Description": "The name for OO Central's database (2-32 characters long)",
            "MaxLength": "32",
            "MinLength": "2",
            "Type": "String"
        },
        "OOCentralInstanceType": {
            "AllowedValues": [
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t3.medium",
                "t3.large",
                "t3.xlarge",
                "m5.large",
                "m5.xlarge",
                "m5a.large",
                "m5a.xlarge"
            ],
            "ConstraintDescription": "Must be a valid instance type",
            "Default": "t2.medium",
            "Description": "Type of EC2 instance for the Central instances",
            "Type": "String"
        },
        "OOCentralNodesSize": {
            "AllowedPattern": "^([1-9]|[0-1][0])$",
            "ConstraintDescription": "Must be any number between: 1 and 10",
            "Default": "2",
            "Description": "The amount of Central instances (nodes) in the cluster - max 10",
            "Type": "String"
        },
        "OOCentralT2T3Burst": {
            "AllowedValues": [
                "standard",
                "unlimited"
            ],
            "ConstraintDescription": "If OOCentralInstanceType is either a T2 or T3 instance type, the CPU burst mode must be either 'standard' or 'unlimited'",
            "Default": "standard",
            "Description": "For T2/T3 instances only, choose the CPU burstable performance mode",
            "Type": "String"
        },
        "CWCentralMonitoring": {
            "AllowedValues": [
                "false",
                "true"
            ],
            "ConstraintDescription": "The Cloud Watch Monitoring option must be set to either false or true",
            "Default": "false",
            "Description": "Choose True to enable detailed CloudWatch monitoring of the OO Central instances for an additional cost",
            "Type": "String"
        },
        "CWDesignerMonitoring": {
            "AllowedValues": [
                "false",
                "true"
            ],
            "ConstraintDescription": "Must be either false or true",
            "Default": "false",
            "Description": "Select whether you want Cloud Watch to perform detailed monitoring on the OO Workflow Designer instance (true) or not (false)",
            "Type": "String"
        },
        "DBBackupRetentionPeriod": {
            "Default": "10",
            "Description": "Select the number of days that Amazon RDS should retain automatic backups of the DB instance. A backup retention period of zero days will disable automated backups for the DB Instance",
            "MaxValue": "35",
            "MinValue": "1",
            "Type": "Number"
        },
        "DBInstanceType": {
            "AllowedValues": [
                "db.m4.large",
                "db.m4.xlarge",
                "db.t2.large",
                "db.t2.xlarge"
            ],
            "ConstraintDescription": "Must contain valid instance type",
            "Default": "db.t2.large",
            "Description": "Type of EC2 instance for the database server.",
            "Type": "String"
        },
        "DBMasterPassword": {
            "AllowedPattern": "^(?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*",
            "ConstraintDescription": "The password for the Database master username and it's confirmation must be between 8 and 32 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "Description": "Password for the database master user",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "DBMasterPasswordConfirm": {
            "AllowedPattern": "^(?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*",
            "ConstraintDescription": "The password for the Database master username and it's confirmation must be between 8 and 32 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "DBMasterUsername": {
            "AllowedPattern": "^[a-zA-Z0-9]{2,32}$",
            "ConstraintDescription": "The Database Master Username must be between alphanumeric, can contain uppercases, lowercases and must be between 2 and 32 chars long",
            "Default": "oodbadmin",
            "Description": "The name of the database master user",
            "MaxLength": "32",
            "MinLength": "2",
            "Type": "String"
        },
        "DBMultiAZ": {
            "AllowedValues": [
                false,
                true
            ],
            "Default": false,
            "Description": "Choose 'true' to deploy the database across multiple Availability Zones",
            "Type": "String"
        },
        "DBPreferredBackupWindow": {
            "AllowedPattern": "^(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9])-(([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9])$",
            "Default": "01:00-01:30",
            "Description": "The daily time range in UTC during which the database automated backups are created. Must be in the format hh24:mi-hh24:mi, the time interval must be at least 30 minutes, and must not conflict with the preferred maintenance window",
            "Type": "String"
        },
        "DBPreferredMaintenanceWindow": {
            "AllowedPattern": "^((\\b(?=\\w{3}\\b)(Mon|Tue|Wed|Thu|Fri|Sat|Sun))\\w*:([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9])-((\\b(?=\\w{3}\\b)(Mon|Tue|Wed|Thu|Fri|Sat|Sun)\\w*):([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9])$",
            "Default": "Sun:01:30-Sun:02:00",
            "Description": "The weekly time range in UTC during which system maintenance can occur. Must be in the format ddd:hh24:mi-ddd:hh24:mi and must not conflict with the preferred backup window",
            "Type": "String"
        },
        "DBStorageInGB": {
            "Default": "100",
            "Description": "Define the allocated storage for the database server (in GBs) - minimum 20, maximum 16384",
            "MaxValue": "16384",
            "MinValue": "20",
            "Type": "Number"
        },
        "OODesignerDBName": {
            "AllowedPattern": "^$|([a-zA-Z0-9]{2,32}$)",
            "ConstraintDescription": "The Designer database name must be alphanumeric, can contain uppercases, lowercases and must be between 2 and 32 chars long",
            "Default": "oodesigner",
            "Description": "The name for OO Workflow Designer's database (2-32 characters long). Ignore this parameter if you do not want to deploy OO Workflow Designer",
            "Type": "String"
        },
        "OODesignerInstanceType": {
            "AllowedValues": [
                "t2.medium",
                "t3.medium",
                "m5.large",
                "m5a.large"
            ],
            "ConstraintDescription": "Must contain valid instance type",
            "Default": "t2.medium",
            "Description": "Type of EC2 instance for the Designer instance",
            "Type": "String"
        },
        "ELBScheme": {
            "AllowedValues": [
                "internal",
                "internet-facing"
            ],
            "ConstraintDescription": "The Load Balancer scheme must be either 'internet-facing' or 'internal'",
            "Default": "internet-facing",
            "Description": "Choose the Load Balancer's exposure: internet-facing or internal",
            "Type": "String"
        },
        "ELBAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "The Load Balancer CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "The CIDR IP range that is permitted to access the Elastic Load Balancer. We recommend that you set this value to a trusted IP range. If you deploy the OO stack in a new VPC, and the Load Balancer's scheme is set to 'internal', then make sure that the IP range you configure here is within the IP range of the new VPC's subnets. Example: set this range to the IP range of the two public subnets defined in the Network Configuration section",
            "Type": "String"
        },
        "LicenseAgreement": {
            "AllowedValues": [
                "-",
                "I agree"
            ],
            "Default": "-",
            "Description": "I have read and agree to the terms of the End User License Agreement for Micro Focus Operations Orchestration (https://www.microfocus.com/media/documentation/micro_focus_end_user_license_agreement.pdf).",
            "Type": "String"
        },
        "LinuxBastionKeyPairName": {
            "AllowedPattern": ".+",
            "ConstraintDescription": "The Key Pair Name For Bastion Hosts that will be used for SSH access to the Linux Bastion host must not be empty",
            "Description": "The name of an existing public/private key pair, which allows you to securely connect to your linux bastion instance after it launches",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NotificationTrigger": {
            "AllowedValues": [
                "false",
                "true"
            ],
            "ConstraintDescription": "E-mail notifications parameter must be set to either 'true' or 'false'",
            "Default": "true",
            "Description": "Choose 'false' if you don't want to receive e-mail notifications about failed auto scaling operations",
            "Type": "String"
        },
        "OOCentralOOPass": {
            "AllowedPattern": "^(?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*",
            "ConstraintDescription": "Central Instance - The passwords for the 'oo' linux user and it's confirmation value must be different than the root user password, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "Description": "Password for the linux user 'oo' inside the Central instances. This user has the ownership of OO files and processes. The password must be different than the password of the Linux root user, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "OOCentralOOPassConfirm": {
            "AllowedPattern": "^(?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*",
            "ConstraintDescription": "Central Instance - The passwords for the 'oo' linux user and it's confirmation value must be different than the root user password, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "OOCentralPass": {
            "AllowedPattern": "^(?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*",
            "ConstraintDescription": "OO Central administrative password must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "Description": "Password for the OO Central administrative user 'admin'. Must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "OOCentralPassConfirm": {
            "AllowedPattern": "^(?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*",
            "ConstraintDescription": "OO Central administrative password and it's confirmation must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "OOCentralRootPass": {
            "AllowedPattern": "^(?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*",
            "ConstraintDescription": "Central Instance - The passwords for the 'root' linux user and it's confirmation value must be different than the oo user password, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "Description": "Password for the linux user 'root' inside the Central instances - Must be different than the password for the Linux oo user, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "OOCentralRootPassConfirm": {
            "AllowedPattern": "^(?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*",
            "ConstraintDescription": "Central Instance - The passwords for the 'root' linux user and it's confirmation value must be different than the password for the Linux oo user, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "OODesignerOOPass": {
            "AllowedPattern": "^$|((?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*)",
            "ConstraintDescription": "Workflow Desiner Instance - The passwords for the 'oo' linux user and it's confirmation value must be different than the root user password, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "Description": "Password for the linux user 'oo' inside the Designer instance. This user has the ownership of OO files and processes. The password must be different than the password for the Linux root user, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "NoEcho": "true",
            "Type": "String"
        },
        "OODesignerOOPassConfirm": {
            "AllowedPattern": "^$|((?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*)",
            "ConstraintDescription": "Workflow Desiner Instance - The passwords for the 'oo' linux user and it's confirmation value must be different than the root user password, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "NoEcho": "true",
            "Type": "String"
        },
        "OODesignerPass": {
            "AllowedPattern": "^$|((?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*)",
            "ConstraintDescription": "OO Workflow Designer administrative password and it's confirmation must be different than Central admin password, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "Description": "Password for the OO Designer administrative user 'admin' - Must be different than the Central admin password, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "NoEcho": "true",
            "Type": "String"
        },
        "OODesignerPassConfirm": {
            "AllowedPattern": "^$|((?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*)",
            "ConstraintDescription": "OO Workflow Designer administrative password and it's confirmation must be different than Central admin password, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "NoEcho": "true",
            "Type": "String"
        },
        "OODesignerRootPass": {
            "AllowedPattern": "^$|((?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*)",
            "ConstraintDescription": "Workflow Designer Instance - The passwords for the 'root' linux user and it's confirmation value must be different than the oo user password, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "Description": "Password for the linux user 'root' inside the Designer instance - Must be different than the password for the Linux oo user, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "NoEcho": "true",
            "Type": "String"
        },
        "OODesignerRootPassConfirm": {
            "AllowedPattern": "^$|((?=.{8,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!#$%^&*()+\\-={}|;:,.<>?]).*)",
            "ConstraintDescription": "Workflow Designer Instance - The passwords for the 'root' linux user and it's confirmation value must be different than the password for the Linux oo user, must be between 8 and 12 chars long, alphanumeric, can contain uppercases, lowercases, and at least one of the following characters: !#$%^&*()+\\-={}|;:,.<>?",
            "NoEcho": "true",
            "Type": "String"
        },
        "OODesignerTrigger": {
            "AllowedValues": [
                "false",
                "true"
            ],
            "ConstraintDescription": "The 'Deploy Workflow Designer' option must be sset to either 'true' or 'false'",
            "Default": "true",
            "Description": "Choose 'false' to not deploy the OO Workflow Designer instance. If you choose 'false', then all parameters related to Workflow Designer are ignored",
            "Type": "String"
        },
        "OOKeyPairName": {
            "AllowedPattern": ".+",
            "ConstraintDescription": "The OO Key Pair Name that will be used for SSH access to OO instances must not be empty",
            "Description": "Name of an existing EC2 key pair for accessing OO Central and Workflow Designer EC2 instances",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "OperatorEmail": {
            "AllowedPattern": "^$|(([a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?))",
            "ConstraintDescription": "The Operator Email parameter must be a valid email address",
            "Description": "(Optional) Email of the person that will be informed about failed auto scaling operations",
            "Type": "String"
        },
        "PrivateSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/19",
            "Description": "CIDR block for private subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PrivateSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.32.0/19",
            "Description": "CIDR block for private subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "CIDR block for the public (DMZ) subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.144.0/20",
            "Description": "CIDR block for the public (DMZ) subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3BucketNameForCluster": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "The S3 bucket for OO Cluster name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "S3 bucket name that will be used by OO Central cluster instances to store the encryption keys. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^$|^([0-9a-zA-Z-]+\/)*$",
            "ConstraintDescription": "Quick Start key prefix can either empty or follow this constraint: can include numbers, lowercase letters, uppercase letters, forward slashes (/), hyphens (-), and must end in a forward slash (/).",
            "Default": "quickstart-microfocus-operations-orchestration/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can either be empty or follow this constraint: can include numbers, lowercase letters, uppercase letters, forward slashes (/), hyphens (-), and must end with a forward slash (/).",
            "Type": "String"
        },
        "QSS3KeyPrefixForCluster": {
            "AllowedPattern": "^$|^([0-9a-zA-Z-]+\/)*$",
            "ConstraintDescription": "The S3 key prefix of the S3 bucket for OO Cluster can either be empty or follow this constraint: can include numbers, lowercase letters, uppercase letters, forward slashes (/), hyphens (-), and must end in a forward slash (/).",
            "Description": "S3 key prefix that will be used by OO Central cluster instances to store the encryption files. This parameter can either be empty or follow this constraint: can include numbers, lowercase letters, uppercase letters, hyphens (-), and a forward slash (/).",
            "Type": "String"
        },
        "BastionAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "The Bastion Host's CIDR IP range must be in the form x.x.x.x/x",
            "Description": "The CIDR IP range that is permitted to access the bastion hosts. We recommend that you set this value to a trusted IP range.",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC",
            "Type": "String"
        }
    },
    "Rules": {
        "DBMatchPasswords": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Equals": [
                            {
                                "Ref": "DBMasterPassword"
                            },
                            {
                                "Ref": "DBMasterPasswordConfirm"
                            }
                        ]
                    },
                    "AssertDescription": "Database password and it's confirmation do not match"
                }
            ]
        },
        "KeyPairsNotEmpty": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Not": [
                            {
                                "Fn::EachMemberEquals": [
                                    {
                                        "Fn::RefAll": "AWS::EC2::KeyPair::KeyName"
                                    },
                                    ""
                                ]
                            }
                        ]
                    },
                    "AssertDescription": "All key pair parameters must not be empty"
                }
            ]
        },
        "LicenseAgreementRule": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Contains": [
                            [
                                "I agree"
                            ],
                            {
                                "Ref": "LicenseAgreement"
                            }
                        ]
                    },
                    "AssertDescription": "User must agree to the terms of the license agreement."
                }
            ]
        },
        "NotificationEmailNotEmpty": {
            "RuleCondition" : {
                "Fn::Equals":[
                    {
                        "Ref": "NotificationTrigger"
                    },
                    "true"
                ]
            },
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Not": [
                            {
                                "Fn::Equals": [
                                    {
                                        "Ref": "OperatorEmail"
                                    },
                                    ""
                                ]
                            }
                        ]
                    },
                    "AssertDescription": "E-mail notifications are set to: true.  You must provide a valid email address for the parameter: Operator Email, or set E-mail Notifications to false"
                }
            ]
        },
        "OOCentralSpecificRules": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Equals": [
                            {
                                "Ref": "OOCentralPassConfirm"
                            },
                            {
                                "Ref": "OOCentralPass"
                            }
                        ]
                    },
                    "AssertDescription": "Central admin pass and it's confirmation do not match"
                },
                {
                    "Assert": {
                        "Fn::Equals": [
                            {
                                "Ref": "OOCentralOOPassConfirm"
                            },
                            {
                                "Ref": "OOCentralOOPass"
                            }
                        ]
                    },
                    "AssertDescription": "Central instance - password for oo linux user and it's confirmation do not match"
                },
                {
                    "Assert": {
                        "Fn::Equals": [
                            {
                                "Ref": "OOCentralRootPassConfirm"
                            },
                            {
                                "Ref": "OOCentralRootPass"
                            }
                        ]
                    },
                    "AssertDescription": "Central instance - password for root linux user and it's confirmation do not match"
                },
                {
                    "Assert": {
                        "Fn::Not": [
                            {
                                "Fn::Equals": [
                                    {
                                        "Ref": "OOCentralRootPass"
                                    },
                                    {
                                        "Ref": "OOCentralOOPass"
                                    }
                                ]
                            }
                        ]
                    },
                    "AssertDescription": "Password of 'oo' and 'root' linux users in Central instances must be different"
                },
                {
                    "Assert": {
                        "Fn::Not": [
                            {
                                "Fn::And": [
                                    {
                                        "Fn::Or": [
                                            {
                                                "Fn::Equals": [
                                                    {
                                                        "Ref": "OOCentralInstanceType"
                                                    },
                                                    "m5a.large"
                                                ]
                                            },
                                            {
                                                "Fn::Equals": [
                                                    {
                                                        "Ref": "OOCentralInstanceType"
                                                    },
                                                    "m5a.xlarge"
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "Fn::Equals": [
                                            {
                                                "Ref": "OOCentralT2T3Burst"
                                            },
                                            "unlimited"
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "AssertDescription": "Central Instance - Cannot choose 'unlimited' for CPU Burst Mode if instance type is not a T2 or T3 class"
                }
            ]
        },
        "OODesignerSpecificRules": {
            "RuleCondition" : {
                "Fn::Equals":[
                    {
                        "Ref": "OODesignerTrigger"
                    },
                    "true"
                ]
            },
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Not": [
                            {
                                "Fn::Contains": [
                                    [
                                        {
                                            "Ref": "OODesignerPass"
                                        },
                                        {
                                            "Ref": "OODesignerPassConfirm"
                                        },
                                        {
                                            "Ref": "OODesignerOOPass"
                                        },
                                        {
                                            "Ref": "OODesignerOOPassConfirm"
                                        },
                                        {
                                            "Ref": "OODesignerRootPass"
                                        },
                                        {
                                            "Ref": "OODesignerRootPassConfirm"
                                        },
                                        {
                                            "Ref": "OODesignerDBName"
                                        }
                                    ],
                                    ""
                                ]
                            }
                        ]
                    },
                    "AssertDescription": "If you choose to deploy Workflow Designer, you must not leave any of the following required Workflow Designer parameters empty: Designer Admin Pass and it's confirmation, Linux oo user password and it's confirmation, Linux root user password and it's confirmation and Workflow Designer database name"
                },
                {
                    "Assert": {
                        "Fn::Equals": [
                            {
                                "Ref": "OODesignerPassConfirm"
                            },
                            {
                                "Ref": "OODesignerPass"
                            }
                        ]
                    },
                    "AssertDescription": "Workflow Designer admin password and it's confirmation do not match"
                },
                {
                    "Assert": {
                        "Fn::Equals": [
                            {
                                "Ref": "OODesignerOOPassConfirm"
                            },
                            {
                                "Ref": "OODesignerOOPass"
                            }
                        ]
                    },
                    "AssertDescription": "Workflow Designer - password for oo linux user and it's confirmation do not match"
                },
                {
                    "Assert": {
                        "Fn::Equals": [
                            {
                                "Ref": "OODesignerRootPassConfirm"
                            },
                            {
                                "Ref": "OODesignerRootPass"
                            }
                        ]
                    },
                    "AssertDescription": "Workflow Designer - password for root linux user and it's confirmation do not match"
                },
                {
                    "Assert": {
                        "Fn::Not": [
                            {
                                "Fn::Equals": [
                                    {
                                        "Ref": "OODesignerPass"
                                    },
                                    {
                                        "Ref": "OOCentralPass"
                                    }
                                ]
                            }
                        ]
                    },
                    "AssertDescription": "OO Central Admin Password must be different than the OO Workflow Designer Admin Password"
                }
            ]
        },
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must in the VPC"
                }
            ]
        }
    },
    "Conditions": {
        "CreateDesigner": {
            "Fn::Equals": [
                {
                    "Ref": "OODesignerTrigger"
                },
                "true"
            ]
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template"
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "LinuxBastionKeyPairName"
                    },
                    "NumberOfAZs": "2",
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "BastionStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template"
                    },
                "Parameters": {
                    "BastionAMIOS": "Amazon-Linux-HVM",
                    "BastionInstanceType": {
                        "Ref": "BastionInstanceType"
                    },
                    "KeyPairName": {
                        "Ref": "LinuxBastionKeyPairName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Sub": "${QSS3KeyPrefix}submodules/quickstart-linux-bastion/"
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "BastionAccessCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        },
        "OOStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/microfocus-oo-template.json"
                },
                "Parameters": {
                    "OOCentralDBName": {
                        "Ref": "OOCentralDBName"
                    },
                    "OOCentralInstanceType": {
                        "Ref": "OOCentralInstanceType"
                    },
                    "OOCentralNodesSize": {
                        "Ref": "OOCentralNodesSize"
                    },
                    "OOCentralT2T3Burst": {
                        "Ref": "OOCentralT2T3Burst"
                    },
                    "CWCentralMonitoring": {
                        "Ref": "CWCentralMonitoring"
                    },
                    "CWDesignerMonitoring": {
                        "Ref": "CWDesignerMonitoring"
                    },
                    "DBBackupRetentionPeriod": {
                        "Ref": "DBBackupRetentionPeriod"
                    },
                    "DBInstanceType": {
                        "Ref": "DBInstanceType"
                    },
                    "DBMasterPassword": {
                        "Ref": "DBMasterPassword"
                    },
                    "DBMasterPasswordConfirm": {
                        "Ref": "DBMasterPasswordConfirm"
                    },
                    "DBMasterUsername": {
                        "Ref": "DBMasterUsername"
                    },
                    "DBMultiAZ": {
                        "Ref": "DBMultiAZ"
                    },
                    "DBPreferredBackupWindow": {
                        "Ref": "DBPreferredBackupWindow"
                    },
                    "DBPreferredMaintenanceWindow": {
                        "Ref": "DBPreferredMaintenanceWindow"
                    },
                    "DBStorageInGB": {
                        "Ref": "DBStorageInGB"
                    },
                    "ELBAccessCIDR": {
                        "Ref": "ELBAccessCIDR"
                    },
                    "ELBScheme": {
                        "Ref": "ELBScheme"
                    },
                    "LicenseAgreement": {
                        "Ref": "LicenseAgreement"
                    },
                    "NotificationTrigger": {
                        "Ref": "NotificationTrigger"
                    },
                    "OODesignerDBName": {
                        "Ref": "OODesignerDBName"
                    },
                    "OODesignerInstanceType": {
                        "Ref": "OODesignerInstanceType"
                    },
                    "OOCentralOOPass": {
                        "Ref": "OOCentralOOPass"
                    },
                    "OOCentralOOPassConfirm": {
                        "Ref": "OOCentralOOPassConfirm"
                    },
                    "OOCentralPass": {
                        "Ref": "OOCentralPass"
                    },
                    "OOCentralPassConfirm": {
                        "Ref": "OOCentralPassConfirm"
                    },
                    "OOCentralRootPass": {
                        "Ref": "OOCentralRootPass"
                    },
                    "OOCentralRootPassConfirm": {
                        "Ref": "OOCentralRootPassConfirm"
                    },
                    "OODesignerOOPass": {
                        "Ref": "OODesignerOOPass"
                    },
                    "OODesignerOOPassConfirm": {
                        "Ref": "OODesignerOOPassConfirm"
                    },
                    "OODesignerPass": {
                        "Ref": "OODesignerPass"
                    },
                    "OODesignerPassConfirm": {
                        "Ref": "OODesignerPassConfirm"
                    },
                    "OODesignerRootPass": {
                        "Ref": "OODesignerRootPass"
                    },
                    "OODesignerRootPassConfirm": {
                        "Ref": "OODesignerRootPassConfirm"
                    },
                    "OODesignerTrigger": {
                        "Ref": "OODesignerTrigger"
                    },
                    "OOKeyPairName": {
                        "Ref": "OOKeyPairName"
                    },
                    "OOSSHAccessSGID": {
                        "Fn::GetAtt": [
                            "BastionStack",
                            "Outputs.BastionSecurityGroupID"
                        ]
                    },
                    "OperatorEmail": {
                        "Ref": "OperatorEmail"
                    },
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "QSS3BucketNameForCluster": {
                        "Ref": "QSS3BucketNameForCluster"
                    },
                    "QSS3KeyPrefixForCluster": {
                        "Ref": "QSS3KeyPrefixForCluster"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "OOCentralCluster": {
            "Description": "OO Central Cluster",
            "Value": {
                "Fn::GetAtt": [
                    "OOStack",
                    "Outputs.OOCentralCluster"
                ]
            }
        },
        "OOWorkFlowDesigner": {
            "Description": "OO Workflow Designer",
            "Value": {
                "Fn::GetAtt": [
                    "OOStack",
                    "Outputs.OOWorkflowDesigner"
                ]
            },
            "Condition": "CreateDesigner"
        },
        "IDMAdmin": {
            "Description": "OO Workflow Designer Identity Management Server",
            "Value": {
                "Fn::GetAtt": [
                    "OOStack",
                    "Outputs.IDMAdmin"
                ]
            },
            "Condition": "CreateDesigner"
        }
    }
}

